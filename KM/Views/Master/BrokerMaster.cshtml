
@{
    ViewBag.Title = "BrokerMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .table td {
        padding: .35rem;
    }
</style>
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Broker List</h1>
            </div>
            <div class="col-sm-6">
                <button type="button" id="btnNewAdd" class="btn btn-success float-right" data-toggle="modal" data-target="#myModal"><i class="fas fa-plus"></i>Add Broker</button>
            </div>
        </div>
    </div>
</section>

<section class="content">

    <div class="row">
        <div class="col-12">
            <div class="card">
                @*<div class="card-header">
                        <h3 class="card-title">Web Pages Master</h3>
                    </div>*@
                <!-- /.card-header -->
                <div class="card-body">
                    @*<div id="tbl_memo_outstanding" class="box-body table-responsive no-padding">
                        </div>*@
                    <table id="tbl_broker" cellspacing="0" cellpadding="0" class="table table-bordered table-hover">
                        <thead class="uppercase">
                            <tr>
                                <th>Srno</th>
                                <th>BrokerId</th>
                                <th>Broker</th>
                                <th>Broker Type</th>
                                <th>Brokerage</th>
                                <th>Active</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot></tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="modal bounceIn animated" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Broker Master</h4>
                    <button type="button" class="close" data-dismiss="modal" id="btnCloseModal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @*<div class="row">
                        <div class="panel">*@
                    <div class="col-md-12">
                        <div class="card-body">
                            <div class="row">
                                <div class="form-group col-sm-12">
                                    <label for="txtBrokerId">Broker Id</label>
                                    <input type="text" class="form-control form-control-sm" id="txtBrokerId" readonly="readonly">
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-sm-12">
                                    <label for="txtBrokerName">Broker Name</label>
                                    <input type="text" class="form-control form-control-sm" id="txtBrokerName">
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-sm-12">
                                    <label for="ddl_brokerType">Broker Type</label>
                                    @Html.DropDownList("ddl_brokerType", (MultiSelectList)ViewBag.BrokerTypeList, "Please Select...", new { @class = "form-control form-control-sm", @placeholder = "Broker Type", @id = "ddl_brokerType" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-sm-12">
                                    <label for="txtBrokerage">Brokerage</label>
                                    <input type="text" class="form-control form-control-sm" id="txtBrokerage">
                                </div>
                            </div>
                            <div class="row">                             
                                <div class="form-group col-sm-12">
                                    <input type="checkbox" id="CheckActive" name="CheckActive" class="ckbox ckbox-primary" style="margin-top:12px" />
                                    <label style="text-align: left; padding-left: 0%" for="CheckActive">Active</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*</div>
                        </div>*@
                </div>
                <div class="modal-footer justify-content-between">
                    <input type="button" id="btnSave" class="btn btn-primary" value="Save">
                    <input type="button" id="btnClear" class="btn btn-primary" value="Clear" onclick="Clear()">
                </div>
            </div><!-- modal-content -->
        </div><!-- modal-dialog -->
        <!-- modal -->
    </div>
</section>
<script type="text/javascript">
    var isSave = false;
    $(document).ready(function () {
        display();
    });

    function display() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetBroker")',
            traditional: true,
            contentType: 'application/json; charset=utf-8',
            success: function (json) {
                if (json) {
                    //var tableHeaders = '';
                    //var dynamicColumns = [];
                    //var i = 0;

                    //tableHeaders += "<th>Edit</th>";
                    //var obj = { sTitle: "Select", orderable: false };
                    //dynamicColumns[i] = obj;
                    //i++;

                    //$.each(json.List[0], function (key, value) {
                    //    tableHeaders += "<th>" + key + "</th>";

                    //    var obj = { sTitle: key, orderable: false };

                    //    dynamicColumns[i] = obj;
                    //    i++;
                    //});

                    //$("#gridboxmap1").empty();
                    //$("#gridboxmap1").append('<table id="tblExcelImport_Company" cellspacing="0" cellpadding="0" style="width: 100%; margin-bottom: 5px;white-space: nowrap;" class="table-bordered table-condensed table-striped grid"><thead class="uppercase"><tr>' + tableHeaders + '</tr></thead><tbody></tbody><tfoot></tfoot></table>');

                    //fetch all records from JSON result and make row data set.
                    var rowDataSet = [];
                    var i = 0;
                    //var totolOutStandingCarat = 0;
                    //var totolOutStandingValue = 0;
                    $.each(json.List, function (key, value) {
                        var rowData = [];
                        var j = 0;
                        $.each(json.List[i], function (key, value) {
                            rowData[j] = value;
                    //        if (j == 7) {
                    //            totolOutStandingCarat = Number(totolOutStandingCarat) + Number(value);
                    //        }
                           j++;
                        });
                        rowDataSet[i] = rowData;

                        i++;
                    });

                    //$("#lbl_totol_outstanding").text(i);
                    //$("#lbl_totol_outstanding_carat").text(totolOutStandingCarat);
                    //$("#lbl_totol_outstanding_value").text(totolOutStandingCarat);



                    var oTable = $('#tbl_broker').dataTable({
                        "bDestroy": true,
                        //"bFilter": false,
                        "serverSide": false,
                        "bInfo": true,
                        "bAutoWidth": false,
                        "bPaginate": true,
                        "bLengthChange": true,
                        //"fnPreDrawCallback": function () {
                        //    show_loader();
                        //},
                        //"fnDrawCallback": function () {
                        //    hide_loader();
                        //},
                        "bDestroy": true,
                        "bSort": true,
                        "sEmptyTable": "Loading data from server, Or Data Not Available...",
                        "aaData": rowDataSet,
                        //"aoColumns": dynamicColumns,
                        "columns": [

                              { "sWidth": "1%" },
                              { "sWidth": "1%" },
                              { "sWidth": "1%" },
                              { "sWidth": "1%" },
                              { "sWidth": "1%" },
                              {
                                  "bSortable": false,
                                  "sWidth": "1%",
                                  "render": function (data, type, row, meta) {
                                      debugger
                                      if (row[5] == 'True') {
                                          return '<center><input type="checkbox" id="Active" checked="checked" disabled="disabled"></center>'
                                      }
                                      else {
                                          return '<center><input type="checkbox" id="Active" disabled="disabled"></center>'
                                      }
                                  }
                              },
                              {
                                  "bSortable": false,
                                  "sWidth": "1%",
                                  "render": function (data, type, row, meta) {
                                      return '<center><a href="javascript:void(0);" onclick="EditDetails(' + row[1] + ',\'' + row[2] + '\',\'' + row[3] + '\',\'' + row[4] + '\',\'' + row[5] + '\')" style="padding:5px;"><i class="fa fa-edit" style="color:#444;"></i></a></center>'
                                  }
                              }


                        ],
                        "columnDefs": [
                            { "targets": [1], "visible": false }

                        ]
                    });

                }
            },
            error: function (json) { alert("Error " + json) }
        });
    };
    $('#btnSave').click(function () {
        isSave = true;
        var URL = '';
        if ($('#btnSave').attr('value') == 'Save') {
            URL = '@Url.Action("Broker_SaveForm", "Master")';
        }
        if ($('#btnSave').attr('value') == 'Update') {
            URL = '@Url.Action("Broker_UpdateForm", "Master")';
        }
        if (Valid()) {
               debugger
                $.ajax({
                    url: URL,
                    type: "POST",
                    dataType: "json",
                    data: JSON.stringify({
                        broker_id: $("#txtBrokerId").val(),
                        broker_name: $("#txtBrokerName").val(),
                        broker_type: $("#ddl_brokerType").val(),
                        brokerage: $("#txtBrokerage").val(),
                        active: $("#CheckActive")[0].checked == true ? 1 : 0

                    }),
                    contentType: "application/json; charset=utf-8"
                }).done(function (data) {
                    if (data.success) {
                        Clear();
                        display();
                        $("#btnCloseModal").click();
                        //$("#btnSave").attr('class', 'btn btn-success');

                    }
                    //bootbox.alert(data.message);
                    alert(data.message);
                });
                //Clear();
                //display();
                //bootbox.alert(data.message);
                alert(data.message);

            count = 0;
            $("#btnSave").attr('value', 'Save');
        }
    });
    function Clear() {
        $("#txtBrokerId").val('');
        $("#txtBrokerName").val('');
        $("#txtBrokerage").val('0');
        $("#ddl_brokerType").trigger('change');
        $("#CheckActive").prop("checked", true);
        $("#btnSave").attr('value', 'Save');
    }
    $('#btnCloseModal').click(function () {
        Clear();
    });
    function Valid()
    {

        if(isSave)
        {
            debugger
            if ($("#txtBrokerName").val() == '') {
                alert('Broker Name should not be blank');
                return false;
            }
            //if ($("#txtBrokerage").val() == '') {
            //    alert('Brokerage Name should not be blank');
            //    return false;
            //}
            if ($("#ddl_brokerType").val() == '') {
                alert('Select Broker Type');
                return false;
            }
            else {
                return true;
            }

        }
    }
    function EditDetails(Id, Name, Type, Brokerage, Active) {
        debugger
        $("#btnNewAdd").click();
        $("#txtBrokerId").val(Id);
        $("#txtBrokerName").val(Name);
        $("#txtBrokerage").val(Brokerage);
        $("#ddl_brokerType").val(Type).trigger("change");
        $("#CheckActive").prop("checked", Active == 'True' ? true : false);
        $("#btnSave").attr('value', 'Update');
    }
</script>





